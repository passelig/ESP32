/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/cc206c87-d532-4021-adbd-3e965df73d6e 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float temperature;
  int mode;
  int treshold;
  bool fanRunning;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include <DHT.h>

#define ledPin 2
#define DHTPIN 13       // Define the digital pin to which the DHT22 is connected to (pin 13)
#define DHTTYPE DHT22   // Change to DHT11 if you're using a DHT11 sensor

// Initialize the DHT sensor
DHT dht(DHTPIN, DHTTYPE);

#include "thingProperties.h"

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  // This delay gives the chance to wait for a Serial Monitor without blocking if none is found
  delay(1500); 

  // Defined in thingProperties.h
  initProperties();

  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  /*
     The following function allows you to obtain more information
     related to the state of network and IoT Cloud connection and errors
     the higher number the more granular information youâ€™ll get.
     The default is 0 (only errors).
     Maximum is 4
 */
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();
  pinMode(ledPin, OUTPUT);
  dht.begin(); // Initialize the DHT sensor
}

void loop() {
  ArduinoCloud.update();
  // Your code here 
  
  temperature = dht.readTemperature();
  if (mode == 0) {
    digitalWrite(ledPin, LOW); // Turn off the LED
    fanRunning = false;// also update cloud variable, so the status on the dashboard is correct
  }
  
  if (mode == 1) {
    digitalWrite(ledPin, HIGH); // Turn off the LED
    fanRunning = true; // also update cloud variable, so the status on the dashboard is correct
  }
  
  if (mode == 2) {
    if (temperature > treshold){
      digitalWrite(ledPin, HIGH); // Turn off the LED
      fanRunning = true;// also update cloud variable, so the status on the dashboard is correct
    } else {
      digitalWrite(ledPin, LOW); // Turn off the LED
      fanRunning = false; // also update cloud variable, so the status on the dashboard is correct
    }
  }
  delay(1000);
}

/*
  Since Treshold is READ_WRITE variable, onTresholdChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onTresholdChange()  {
  // Add your code here to act upon Treshold change
}

/*
  Since Mode is READ_WRITE variable, onModeChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onModeChange()  {
   
}

/*
  Since FanRunning is READ_WRITE variable, onFanRunningChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFanRunningChange()  {
  // Add your code here to act upon FanRunning change
}


